// generated from rosidl_adapter/resource/msg.idl.em
// with input from sbg_driver/msg/SbgStatusAiding.msg
// generated code does not contain a copyright notice


module sbg_driver {
  module msg {
    @verbatim (language="comment", text=
      "SBG Ellipse Messages" "\n"
      "SbgStatus submessage")
    struct SbgStatusAiding {
      @verbatim (language="comment", text=
        "AIDING_GPS1_POS_RECV true when valid GPS 1 position data is received")
      boolean gps1_pos_recv;

      @verbatim (language="comment", text=
        "AIDING_GPS1_VEL_RECV true when valid GPS 1 velocity data is received")
      boolean gps1_vel_recv;

      @verbatim (language="comment", text=
        "AIDING_GPS1_HDT_RECV true when valid GPS 1 true heading data is received")
      boolean gps1_hdt_recv;

      @verbatim (language="comment", text=
        "AIDING_GPS1_UTC_RECV true when valid GPS 1 UTC time data is received")
      boolean gps1_utc_recv;

      @verbatim (language="comment", text=
        "AIDING_MAG_RECV true when valid Magnetometer data is received")
      boolean mag_recv;

      @verbatim (language="comment", text=
        "AIDING_ODO_RECV true when Odometer pulse is received")
      boolean odo_recv;

      @verbatim (language="comment", text=
        "AIDING_DVL_RECV true when valid DVL data is received")
      boolean dvl_recv;
    };
  };
};
